buildscript {
    ext {
        lombockGradleVersion = '3.0.0'
        lombockVersion = '1.18.6'
        modelMapperVersion = '2.3.3'
        springBootVersion = '2.1.4.RELEASE'
        cloudVersion = 'Greenwich.RELEASE'
        serveVersion = '1.0.0'
        feignVersion = '1.4.6.RELEASE'
        lang3Version = '3.9'
        collections4Version = '4.3'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("io.franzbecker:gradle-lombok:${lombockGradleVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath files("../engine/build/libs/engine-${serveVersion}.jar")
    }
}

apply plugin: com.giteshdalal.serve.ServiceGeneratorPlugin

subprojects {
    apply plugin: 'io.franzbecker.gradle-lombok'
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: com.giteshdalal.serve.EnginePlugin

    sourceCompatibility = 1.8

    project.tasks.build.dependsOn(project.tasks.serve)

    repositories {
        mavenCentral()
    }

    dependencies {
        compile("org.projectlombok:lombok:$lombockVersion")
        compile("org.modelmapper:modelmapper:$modelMapperVersion")
        compile("org.modelmapper.extensions:modelmapper-jackson:$modelMapperVersion")
        compile('org.springframework.boot:spring-boot-starter')
        compile("com.fasterxml.jackson.module:jackson-module-jsonSchema")
        compile("org.springframework.boot:spring-boot-starter-mail")
        compile("commons-io:commons-io:2.6")
        testCompile("org.springframework.boot:spring-boot-starter-test")
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:$cloudVersion"
        }
    }

    repositories {
        maven {
            url 'https://repo.spring.io/libs-milestone'
        }
    }

    test {
        testLogging {
            showStandardStreams = true
        }
    }

    eclipse {
        classpath {
            containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
            containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
        }
    }
}
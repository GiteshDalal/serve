/**
 * Generated by Serve Engine
 *
 * @author gitesh
 */
package com.giteshdalal.authservice.query;

public enum SearchOperation {
	EQUALITY, NEGATION, GREATER_THAN, GREATER_THAN_EQ, LESS_THAN, LESS_THAN_EQ, LIKE, STARTS_WITH, ENDS_WITH, CONTAINS, IS_EMPTY, IS_NOT_EMPTY, IN, NOT_IN, IS_MEMBER, IS_NOT_MEMBER;

	public static final String[] OPERATION_SYMBOLS = { ":", "!:", ">", "<", ">:", "<:", "~", "^", "$", "*", "`", "!`", "?", "!?", ".",
			"!." };
	public static final String[] OPERATION_LITERALS = { "eq", "!eq", "gt", "lt", "gteq", "lteq", "like", "startswith", "endswith",
			"contains", "in", "!in", "empty", "!empty", "member", "!member" };

	public static SearchOperation getOperation(String input) {
		switch (input) {
		case ":":
			return EQUALITY;
		case "eq":
			return EQUALITY;
		case "!:":
			return NEGATION;
		case "!eq":
			return NEGATION;
		case ">":
			return GREATER_THAN;
		case "gt":
			return GREATER_THAN;
		case "<":
			return LESS_THAN;
		case "lt":
			return LESS_THAN;
		case ">:":
			return GREATER_THAN_EQ;
		case "gteq:":
			return GREATER_THAN_EQ;
		case "<:":
			return LESS_THAN_EQ;
		case "lteq":
			return LESS_THAN_EQ;
		case "~":
			return LIKE;
		case "like":
			return LIKE;
		case "^":
			return STARTS_WITH;
		case "startswith":
			return STARTS_WITH;
		case "$":
			return ENDS_WITH;
		case "endswith":
			return ENDS_WITH;
		case "*":
			return CONTAINS;
		case "contains":
			return CONTAINS;
		case "`":
			return IN;
		case "in":
			return IN;
		case "!`":
			return NOT_IN;
		case "!in":
			return NOT_IN;
		case "?":
			return IS_EMPTY;
		case "empty":
			return IS_EMPTY;
		case "!?":
			return IS_NOT_EMPTY;
		case "!empty":
			return IS_NOT_EMPTY;
		case ".":
			return IS_MEMBER;
		case "member":
			return IS_MEMBER;
		case "!.":
			return IS_NOT_MEMBER;
		case "!member":
			return IS_NOT_MEMBER;
		default:
			return null;
		}
	}
}
